name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.2.3, etc.
    branches: [ main ]  # Also run on main branch pushes for testing
  pull_request:
    branches: [ main ]  # Run on PRs for validation

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type check
      run: npm run typecheck
      
    - name: Run linting
      run: npm run lint
      
    - name: Build application
      run: npm run build
      
    - name: Build distributable
      run: npm run dist
      env:
        # For code signing (optional - can be added later)
        # CSC_LINK: ${{ secrets.CSC_LINK }}
        # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        # For auto-updater (optional)
        # GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: critiquequest-${{ matrix.os }}
        path: |
          release/*.exe
          release/*.dmg
          release/*.AppImage
          release/*.deb
          release/*.rpm
          release/*.tar.gz
          release/*.zip
        retention-days: 30
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  # Only create releases on tags
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}